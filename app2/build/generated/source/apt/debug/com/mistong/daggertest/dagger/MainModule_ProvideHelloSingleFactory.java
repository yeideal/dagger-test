// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.mistong.daggertest.dagger;

import com.mistong.daggertest.HelloSingle;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class MainModule_ProvideHelloSingleFactory implements Factory<HelloSingle> {
  private final MainModule module;

  public MainModule_ProvideHelloSingleFactory(MainModule module) {
    this.module = module;
  }

  @Override
  public HelloSingle get() {
    return Preconditions.checkNotNull(
        module.provideHelloSingle(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<HelloSingle> create(MainModule module) {
    return new MainModule_ProvideHelloSingleFactory(module);
  }

  public static HelloSingle proxyProvideHelloSingle(MainModule instance) {
    return instance.provideHelloSingle();
  }
}
